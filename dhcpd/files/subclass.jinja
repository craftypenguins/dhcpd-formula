{%- if 'comment' in subclass_config %}
  {%- for line in subclass_config['comment'].splitlines() %}
# {{ line }}
  {%- endfor %}
{%- endif %}
subclass "{{ class }}" "{{ subclass }}" {
{%- if 'use_host_decl_names' in subclass_config %}
  use-host-decl-names {{ subclass_config.use_host_decl_names }};
{%- endif %}
{%- if 'range' in subclass_config %}
  {%- if 'dynamic_bootp' in subclass_config and subclass_config.dynamic_bootp %}
  range dynamic-bootp {{ subclass_config.range[0] }} {{ subclass_config.range[1] }};
  {%- else %}
  range {{ subclass_config.range[0] }} {{ subclass_config.range[1] }};
  {%- endif %}
{%- endif %}
{%- if 'broadcast_address' in subclass_config %}
  option broadcast-address {{ subclass_config['broadcast_address'] }};
{%- endif %}
{%- if 'domain_name_servers' in subclass_config %}
  option domain-name-servers {{ subclass_config['domain_name_servers']|join(',') }};
{%- endif %}
{%- if 'netbios_name_servers' in subclass_config %}
  option netbios-name-servers {{ subclass_config['netbios_name_servers']|join(',') }};
{%- endif %}
{%- if 'ntp_servers' in subclass_config %}
  option ntp-servers {{ subclass_config['ntp_servers']|join(',') }};
{%- endif %}
{%- if 'lpr_servers' in subclass_config %}
  option lpr-servers {{ subclass_config['lpr_servers']|join(',') }};
{%- endif %}
{%- if 'irc_server' in subclass_config %}
  option irc-server {{ subclass_config['irc_server']|join(',') }};
{%- endif %}
{%- if 'tftp_server_name' in subclass_config %}
  option tftp-server-name "{{ subclass_config['tftp_server_name'] }}";
{%- endif %}
{%- if 'smtp_server' in subclass_config %}
  option smtp-server {{ subclass_config['smtp_server'] }};
{%- endif %}
{%- if 'domain_name' in subclass_config %}
  option domain-name "{{ subclass_config['domain_name'] }}";
{%- endif %}
{%- if 'domain_search' in subclass_config %}
  option domain-search "{{ subclass_config['domain_search']|join('","') }}";
{%- endif %}
{%- if 'filename' in subclass_config %}
  filename "{{ subclass_config['filename'] }}";
{%- endif %}
{%- if 'next_server' in subclass_config %}
  next-server {{ subclass_config['next_server'] }};
{%- endif %}
{%- if 'default_lease_time' in subclass_config %}
  default-lease-time {{ subclass_config['default_lease_time'] }};
{%- endif %}
{%- if 'max_lease_time' in subclass_config %}
  max-lease-time {{ subclass_config['max_lease_time'] }};
{%- endif %}
{%- if 'routers' in subclass_config and subclass_config.routers is string %}
  option routers {{ subclass_config.routers }};
{%- elif 'routers' in subclass_config and subclass_config.routers is sequence %}
  option routers
  {%- for router in subclass_config.routers %} {{ router }}
    {%- if not loop.last %},{% else %};{% endif %}
  {%- endfor %}
{%- endif %}
{%- for option in customized.keys() %}
  {%- if option in subclass_config %}
    {%- if customized[option]['type'] in types_to_quote %} {% set quote = dquote %} {%- endif %}
  option {{ option|replace('_', '-') }} {{ quote }}{{ subclass_config.get(option) }}{{ quote }};
  {%- endif %}
{%- endfor %}
{%- for pool in salt['pillar.get']('dhcpd:subclasses:{0}:pools'.format(subclass), []) %}
  pool {
    {%- if 'failover_peer' in pool %}
    failover peer "{{ pool['failover_peer'] }}";
    {%- endif %}
    {%- if 'max_lease_time' in pool %}
    max-lease-time {{ pool.max_lease_time }};
    {%- endif %}
    {%- if 'range' in pool %}
    range {{ pool.range[0] }} {{ pool.range[1] }};
    {%- endif %}
    {%- if 'allow' in pool %}
    allow {{ pool.allow }};
    {%- elif 'deny' in pool %}
    deny {{ pool.deny }};
    {%- endif %}
  }
{%- endfor %}
{%- for host, subclass_config in salt['pillar.get']('dhcpd:subclasses:{0}:hosts'.format(subclass), {}).items() %}
  {%- filter indent(width=2) %}
{% include 'dhcpd/files/host.jinja' with context %}
  {%- endfilter %}
{%- endfor %}
}
